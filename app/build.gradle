apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'


android {


    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.site.vs.videostation"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "1.0.6"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // armeabi设备只兼容armeabi；
        //armeabi-v7a设备兼容armeabi-v7a、armeabi；
        //arm64-v8a设备兼容arm64-v8a、armeabi-v7a、armeabi；
        //X86设备兼容X86、armeabi；
        //X86_64设备兼容X86_64、X86、armeabi；
        //mips64设备兼容mips64、mips；
        //mips只兼容mips；
//        ndk {
//            // 设置支持的SO库架构
//            abiFilters /*'x86', */'arm64-v8a' /*,'armeabi-v7a'*/// 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//        }


    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'MissingTranslation' // 消除字符串没有中文的问题
        disable 'InvalidPackage' //Some libraries have issues with this.
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = ['src/main/res', 'src/main/res-av']
        }
    }


    signingConfigs {
        // 一种是先读取local.properties中签名配置的路径再配置
        release {
            def Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties'))) //读取本地配置文件
            assert localProps['keystore.release.file']

            def Properties keyProps = new Properties()
            // 一种是直接读取签名配置
            keyProps.load(new FileInputStream(file(localProps['keystore.release.file'])))

            storeFile file(keyProps["storeFile"])
            keyAlias keyProps["keyAlias"]
            storePassword keyProps["storePssword"]
            keyPassword keyProps["keyPassword"]

            //      keyAlias 'Gohome'
            //      keyPassword 'hjlapp123'
            //      storeFile file('../GoHome/Gohome_release.jks')
            //      storePassword 'hjlapp123'
        }

        //    debug {}
    }
    buildTypes {
        // 给没发布的版本使用不同包名
        debug {

            //          applicationIdSuffix '.debug'
            //          versionNameSuffix '-DEBUG'
            debuggable true
            minifyEnabled false //不启用Proguard
            zipAlignEnabled false //是否启用zipAlign压缩
        }

        release {
            debuggable true
            zipAlignEnabled false
            //是否zip优化
            minifyEnabled false //是否混淆

            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //混淆配置文件
            //      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }





}


dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.zhusx:core:0.1.0'
    api 'org.jetbrains.anko:anko:0.10.1'
    api 'com.google.android.material:material:1.0.0'
    api 'com.alibaba:fastjson:1.1.54.android'
    api project(':giraffeplayer')

    //retrofit
    api "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    api "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    api "com.facebook.fresco:fresco:${FRESCO_VERSION}"
    api 'com.jakewharton:butterknife:10.0.0'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'

    // https://www.jianshu.com/p/38d8324b126a
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api files('libs/tbs_sdk_thirdapp_v2.4.0.1073_36840_sharewithdownload_withoutGame_obfs_20161011_194834.jar')
    api 'com.orhanobut:logger:2.2.0'
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.44'

    //    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'

    //    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    //    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'

    //    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'

    // 权限
    api 'pub.devrel:easypermissions:1.3.0'
    api 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    api 'jp.wasabeef:glide-transformations:4.0.1'
    api 'com.github.bumptech.glide:okhttp3-integration:4.8.0'
    api 'com.tencent.bugly:crashreport:latest.release'

    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    api 'com.tencent.bugly:nativecrashreport:latest.release'

    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    //retrofit
    api "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    api "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"

    //    implementation "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    //    implementation 'com.google.protobuf:protobuf-java:3.5.1'

    //    //'com.squareup.retrofit2:converter-protobuf:latest.version'

    //    implementation 'com.squareup.retrofit2:converter-protobuf:2.5.0'

    //Rxjava
    api 'io.reactivex:rxjava:1.3.0'
    api 'io.reactivex:rxandroid:1.2.1'
    api 'androidx.appcompat:appcompat:1.0.0-beta01'
    api 'androidx.annotation:annotation:1.0.0'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android.material:material:1.0.0-beta01'
    api 'androidx.multidex:multidex:2.0.1'
    api project(':client')
    api project(':avenginekit')
    api project(':emojilibrary')
    api project(':imagepicker')
    api project(':push')
    api files('libs/TencentLocationSDK_v4.9.7.12_r247861_161205_1104.jar')
    api files('libs/TencentMapSDK_Raster_v_1.2.7_51ae0e7.jar')
    api files('libs/TencentSearch1.1.3.jar')
    api 'com.jakewharton:butterknife:7.0.1'
    api 'com.lqr.adapter:library:1.0.2'
    def lifecycle_version = '2.0.0-beta01'
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api 'com.lqr.optionitemview:library:1.0.7'
    api 'cjt.library.wheel:camera:1.1.9'
    api 'com.kyleduo.switchbutton:library:1.4.4'
    api 'org.webrtc:google-webrtc:1.0.21929'
    api files('libs/joda-time-2.5.jar')
    api 'com.google.zxing:core:3.3.3'
    api 'com.afollestad.material-dialogs:core:0.9.6.0'
    api 'com.jaeger.statusbaruitl:library:1.3.5'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    api 'com.king.zxing:zxing-lite:1.0.6'
    api files('libs/pinyin4j-2.5.0.jar')
    api 'q.rorbin:badgeview:1.1.3'
    api 'com.github.chrisbanes:PhotoView:2.3.0'
}



repositories {
    mavenCentral()
}
